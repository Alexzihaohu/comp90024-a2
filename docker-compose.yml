version: "3.9"
services:
  couch_master:
    image: "ibmcom/couchdb3:3.0.0"
    restart: always
    ports:
      - "5984:5984"
      - "4369:4369"
    links:
      - couch_slave1
      - couch_slave2
    volumes:
      - ./data/master/data:/opt/couchdb/data
    environment:
      - COUCHDB_USER=user
      - COUCHDB_PASSWORD=pass
      - NODENAME=172.20.0.2
    container_name: couch_master
    networks:
      dockernet:
        ipv4_address: 172.20.0.2

  couch_slave1:
    image: "ibmcom/couchdb3:3.0.0"
    restart: always
    ports:
      - "15984:5984"
    volumes:
      - ./data/slave1/data:/opt/couchdb/data
    environment:
      - COUCHDB_USER=user
      - COUCHDB_PASSWORD=pass
      - NODENAME=172.20.0.3
    container_name: couch_slave1
    networks:
      dockernet:
        ipv4_address: 172.20.0.3

  couch_slave2:
    image: "ibmcom/couchdb3:3.0.0"
    restart: always
    ports:
      - "25984:5984"
    volumes:
      - ./data/slave2/data:/opt/couchdb/data
    environment:
      - COUCHDB_USER=user
      - COUCHDB_PASSWORD=pass
      - NODENAME=172.20.0.4
    container_name: couch_slave2
    networks:
      dockernet:
        ipv4_address: 172.20.0.4
        
  twitterlance:
    container_name: twitterlance-app
    build:
      context: ./twitterlance
      dockerfile: Dockerfile
    links:
        - couch_master
        - couch_slave1
        - couch_slave2
    environment:
        - NODENAME=172.20.0.5
    ports:
      - "80:80"
    command: python -c "print('Executing commands...')"
    command: python /code/manage.py initcouchdb
    networks:
      dockernet:
        ipv4_address: 172.20.0.5

networks:
  dockernet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
